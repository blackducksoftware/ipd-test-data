Here is a possible implementation of the program:

```python
def is_prime(num):
    if num <= 1:
        return False
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return True

def generate_primes(limit):
    primes = []
    for i in range(2, limit + 1):
        if is_prime(i):
            primes.append(i)
    return primes

try:
    user_limit = int(input("Enter a number to generate prime numbers up to: "))
    if user_limit < 2:
        raise ValueError("Please enter a number greater than or equal to 2")
    prime_numbers = generate_primes(user_limit)
    print("Prime numbers up to", user_limit, "are:", prime_numbers)
except ValueError as e:
    print("Error:", e)
```

You can copy and paste the code into a Python interpreter or script to run it. This program defines a function `is_prime` to check if a number is prime, and another function `generate_primes` to generate a list of prime numbers up to a specified limit. It then prompts the user to enter a number, calls the `generate_primes` function, and prints out the list of prime numbers less than or equal to the user-provided limit. The program also handles invalid inputs by catching exceptions and providing appropriate error messages.