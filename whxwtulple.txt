Sure! Here is an example of a Python program that simulates a game of Tic Tac Toe and includes a function to check for a winning combination and print out the winner:

```python
def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-"*5)

def check_winner(board):
    for row in board:
        if row[0] == row[1] == row[2] and row[0] != ' ':
            return row[0]
    
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
            return board[0][col]
    
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
        return board[0][0]
    
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
        return board[0][2]
    
    return None

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    turn = 0

    while True:
        print_board(board)
        player = players[turn % 2]

        row = int(input(f"Player {player}, enter row number (0-2): "))
        col = int(input(f"Player {player}, enter column number (0-2): "))

        if board[row][col] == ' ':
            board[row][col] = player
            winner = check_winner(board)
            if winner:
                print_board(board)
                print(f"Player {winner} wins!")
                break
            turn += 1
        else:
            print("That position is already taken. Try again.")

play_game()
```

You can run this program in a Python interpreter or save it as a Python script and run it in your terminal. It will simulate a game of Tic Tac Toe where players take turns entering their moves, and it will check for a winning combination after each move. If there is a winner, it will print out the winner.