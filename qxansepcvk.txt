Sure! Here is a Python program that accomplishes the task:

```python
def find_median(lst):
    # Check if the list is empty
    if not lst:
        return None

    # Sort the list
    lst.sort()

    # Calculate the length of the list
    n = len(lst)

    # Check if the length of the list is odd
    if n % 2 == 1:
        return lst[n // 2]
    # If the length of the list is even
    else:
        return (lst[n // 2 - 1] + lst[n // 2]) / 2

# Test the program with some example inputs
print(find_median([1, 2, 3, 4, 5])) # Output: 3
print(find_median([1, 2, 3, 4, 5, 6])) # Output: 3.5
print(find_median([3, 1, 7, 11, 2, 8])) # Output: 5
print(find_median([])) # Output: None
print(find_median([1])) # Output: 1
```

This program defines a function `find_median` that takes a list of numbers as input and returns the median of the numbers. It handles cases where the list is empty or has only one number. The program first sorts the list, then checks if the length of the list is odd or even to calculate the median accordingly.