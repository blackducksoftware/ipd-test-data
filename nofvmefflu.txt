Here is a sample code for the prompt you provided:

```python
def bubble_sort(arr):
    n = len(arr)
    
    # Traverse through all array elements
    for i in range(n):
        # Flag to check if any swapping is done in this iteration
        swapped = False
        
        # Last i elements are already sorted, so we can skip them
        for j in range(0, n-i-1):
            # Swap if the element found is greater than the next element
            if arr[j] < arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = True
                
        # If no two elements were swapped in this iteration, then the array is already sorted
        if not swapped:
            break
    
    return arr

# Input numbers separated by a space
numbers = list(map(int, input("Enter a list of numbers separated by a space: ").split()))

sorted_list = bubble_sort(numbers)
print("Sorted list in descending order:", sorted_list)
```

This program implements the bubble sort algorithm in Python to sort a list of numbers in descending order. The algorithm works by repeatedly stepping through the list, comparing each pair of adjacent items, and swapping them if they are in the wrong order. The process is repeated until no more swaps are needed, indicating that the list is sorted.

The `bubble_sort` function takes a list `arr` as input, sorts it using the bubble sort algorithm, and returns the sorted list. It uses two nested loops to traverse through the list and perform the necessary swaps. The outer loop (`for i in range(n)`) controls the number of iterations needed to sort the list, while the inner loop (`for j in range(0, n-i-1)`) performs the comparisons and swaps.

At each iteration of the outer loop, the algorithm checks if any swaps were made in the inner loop by setting a `swapped` flag. If no swaps were made, it breaks out of the loop early, as the list is already sorted. This optimization helps reduce the number of unnecessary iterations.

Finally, the user is prompted to enter a list of numbers separated by a space, which is then sorted using the `bubble_sort` function. The sorted list is displayed as output in descending order.

I hope this helps! Let me know if you have any questions or need further assistance.